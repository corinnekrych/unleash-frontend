// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render the create feature page 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateFeatureComponent
    addStrategy={[MockFunction]}
    initCallRequired={false}
    input={
      Object {
        "description": "Description",
        "enabled": false,
        "name": "feature",
        "nameError": Object {},
      }
    }
    moveStrategy={[MockFunction]}
    onCancel={[MockFunction]}
    onSubmit={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "description": "Description",
              "enabled": false,
              "name": "feature",
              "nameError": Object {},
            },
            undefined,
          ],
        ],
      }
    }
    removeStrategy={[MockFunction]}
    setValue={[MockFunction]}
    title="title"
    updateStrategy={[MockFunction]}
    validateName={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <section
        style={
          Object {
            "padding": "16px",
          }
        }
      >
        <StrategiesSection
          addStrategy={[MockFunction]}
          configuredStrategies={Array []}
          moveStrategy={[MockFunction]}
          removeStrategy={[MockFunction]}
          updateStrategy={[MockFunction]}
        />
        <br />
        <FormButtons
          onCancel={[MockFunction]}
          submitText="Update"
        />
      </section>,
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <StrategiesSection
            addStrategy={[MockFunction]}
            configuredStrategies={Array []}
            moveStrategy={[MockFunction]}
            removeStrategy={[MockFunction]}
            updateStrategy={[MockFunction]}
          />,
          <br />,
          <FormButtons
            onCancel={[MockFunction]}
            submitText="Update"
          />,
        ],
        "style": Object {
          "padding": "16px",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "addStrategy": [MockFunction],
            "configuredStrategies": Array [],
            "moveStrategy": [MockFunction],
            "removeStrategy": [MockFunction],
            "updateStrategy": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "StrategiesSection",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onCancel": [MockFunction],
            "submitText": "Update",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "section",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <section
          style={
            Object {
              "padding": "16px",
            }
          }
        >
          <StrategiesSection
            addStrategy={[MockFunction]}
            configuredStrategies={Array []}
            moveStrategy={[MockFunction]}
            removeStrategy={[MockFunction]}
            updateStrategy={[MockFunction]}
          />
          <br />
          <FormButtons
            onCancel={[MockFunction]}
            submitText="Update"
          />
        </section>,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <StrategiesSection
              addStrategy={[MockFunction]}
              configuredStrategies={Array []}
              moveStrategy={[MockFunction]}
              removeStrategy={[MockFunction]}
              updateStrategy={[MockFunction]}
            />,
            <br />,
            <FormButtons
              onCancel={[MockFunction]}
              submitText="Update"
            />,
          ],
          "style": Object {
            "padding": "16px",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "addStrategy": [MockFunction],
              "configuredStrategies": Array [],
              "moveStrategy": [MockFunction],
              "removeStrategy": [MockFunction],
              "updateStrategy": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": "StrategiesSection",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onCancel": [MockFunction],
              "submitText": "Update",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "section",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
